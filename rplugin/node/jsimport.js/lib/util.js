'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.warn = warn;
exports.error = error;
exports.echo = echo;
exports.echomsg = echomsg;
exports.echoboth = echoboth;

var _constants = require('./constants');

function warn(nvim, message) {
  nvim.callFunction('jsimport#util#print_warning', [message]);
}

function error(nvim, message) {
  nvim.callFunction('jsimport#util#print_error', [message]);
}

function echo(nvim, message) {
  nvim.command('echo \'[' + _constants.APP_NAME + '] ' + message + '\'');
}

function echomsg(nvim, message) {
  var combinedMessage = message;
  if (typeof message !== 'string' && message.length) {
    combinedMessage = message.join('|');
  }
  nvim.command('echomsg\'[' + _constants.APP_NAME + '] ' + combinedMessage + '\'');
}

function echoboth(nvim, message) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var specialMessage = options.special;
  echo(nvim, specialMessage || message);
  echomsg(nvim, message);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91dGlsLmpzIl0sIm5hbWVzIjpbIndhcm4iLCJlcnJvciIsImVjaG8iLCJlY2hvbXNnIiwiZWNob2JvdGgiLCJudmltIiwibWVzc2FnZSIsImNhbGxGdW5jdGlvbiIsImNvbW1hbmQiLCJjb21iaW5lZE1lc3NhZ2UiLCJsZW5ndGgiLCJqb2luIiwib3B0aW9ucyIsInNwZWNpYWxNZXNzYWdlIiwic3BlY2lhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFJZ0JBLEksR0FBQUEsSTtRQUlBQyxLLEdBQUFBLEs7UUFJQUMsSSxHQUFBQSxJO1FBSUFDLE8sR0FBQUEsTztRQVFBQyxRLEdBQUFBLFE7O0FBeEJoQjs7QUFJTyxTQUFTSixJQUFULENBQWNLLElBQWQsRUFBb0JDLE9BQXBCLEVBQTZCO0FBQ2xDRCxPQUFLRSxZQUFMLENBQWtCLDZCQUFsQixFQUFpRCxDQUFDRCxPQUFELENBQWpEO0FBQ0Q7O0FBRU0sU0FBU0wsS0FBVCxDQUFlSSxJQUFmLEVBQXFCQyxPQUFyQixFQUE4QjtBQUNuQ0QsT0FBS0UsWUFBTCxDQUFrQiwyQkFBbEIsRUFBK0MsQ0FBQ0QsT0FBRCxDQUEvQztBQUNEOztBQUVNLFNBQVNKLElBQVQsQ0FBY0csSUFBZCxFQUFvQkMsT0FBcEIsRUFBNkI7QUFDbENELE9BQUtHLE9BQUwsMkNBQW9DRixPQUFwQztBQUNEOztBQUVNLFNBQVNILE9BQVQsQ0FBaUJFLElBQWpCLEVBQXVCQyxPQUF2QixFQUFnQztBQUNyQyxNQUFJRyxrQkFBa0JILE9BQXRCO0FBQ0EsTUFBSSxPQUFPQSxPQUFQLEtBQW1CLFFBQW5CLElBQStCQSxRQUFRSSxNQUEzQyxFQUFtRDtBQUNqREQsc0JBQWtCSCxRQUFRSyxJQUFSLENBQWEsR0FBYixDQUFsQjtBQUNEO0FBQ0ROLE9BQUtHLE9BQUwsNkNBQXNDQyxlQUF0QztBQUNEOztBQUVNLFNBQVNMLFFBQVQsQ0FBa0JDLElBQWxCLEVBQXdCQyxPQUF4QixFQUErQztBQUFBLE1BQWRNLE9BQWMsdUVBQUosRUFBSTs7QUFDcEQsTUFBTUMsaUJBQWlCRCxRQUFRRSxPQUEvQjtBQUNBWixPQUFLRyxJQUFMLEVBQVdRLGtCQUFrQlAsT0FBN0I7QUFDQUgsVUFBUUUsSUFBUixFQUFjQyxPQUFkO0FBQ0QiLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFQUF9OQU1FLFxufSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBmdW5jdGlvbiB3YXJuKG52aW0sIG1lc3NhZ2UpIHtcbiAgbnZpbS5jYWxsRnVuY3Rpb24oJ2pzaW1wb3J0I3V0aWwjcHJpbnRfd2FybmluZycsIFttZXNzYWdlXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlcnJvcihudmltLCBtZXNzYWdlKSB7XG4gIG52aW0uY2FsbEZ1bmN0aW9uKCdqc2ltcG9ydCN1dGlsI3ByaW50X2Vycm9yJywgW21lc3NhZ2VdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVjaG8obnZpbSwgbWVzc2FnZSkge1xuICBudmltLmNvbW1hbmQoYGVjaG8gJ1ske0FQUF9OQU1FfV0gJHttZXNzYWdlfSdgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVjaG9tc2cobnZpbSwgbWVzc2FnZSkge1xuICBsZXQgY29tYmluZWRNZXNzYWdlID0gbWVzc2FnZTtcbiAgaWYgKHR5cGVvZiBtZXNzYWdlICE9PSAnc3RyaW5nJyAmJiBtZXNzYWdlLmxlbmd0aCkge1xuICAgIGNvbWJpbmVkTWVzc2FnZSA9IG1lc3NhZ2Uuam9pbignfCcpO1xuICB9XG4gIG52aW0uY29tbWFuZChgZWNob21zZydbJHtBUFBfTkFNRX1dICR7Y29tYmluZWRNZXNzYWdlfSdgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVjaG9ib3RoKG52aW0sIG1lc3NhZ2UsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBzcGVjaWFsTWVzc2FnZSA9IG9wdGlvbnMuc3BlY2lhbDtcbiAgZWNobyhudmltLCBzcGVjaWFsTWVzc2FnZSB8fCBtZXNzYWdlKTtcbiAgZWNob21zZyhudmltLCBtZXNzYWdlKTtcbn1cblxuIl19